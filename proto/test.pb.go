// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        (unknown)
// source: test.proto

package main

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SearchRequest_EnumSamle int32

const (
	SearchRequest_Value1 SearchRequest_EnumSamle = 0
	SearchRequest_Value2 SearchRequest_EnumSamle = 1
	SearchRequest_Value3 SearchRequest_EnumSamle = 2
)

// Enum value maps for SearchRequest_EnumSamle.
var (
	SearchRequest_EnumSamle_name = map[int32]string{
		0: "Value1",
		1: "Value2",
		2: "Value3",
	}
	SearchRequest_EnumSamle_value = map[string]int32{
		"Value1": 0,
		"Value2": 1,
		"Value3": 2,
	}
)

func (x SearchRequest_EnumSamle) Enum() *SearchRequest_EnumSamle {
	p := new(SearchRequest_EnumSamle)
	*p = x
	return p
}

func (x SearchRequest_EnumSamle) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SearchRequest_EnumSamle) Descriptor() protoreflect.EnumDescriptor {
	return file_test_proto_enumTypes[0].Descriptor()
}

func (SearchRequest_EnumSamle) Type() protoreflect.EnumType {
	return &file_test_proto_enumTypes[0]
}

func (x SearchRequest_EnumSamle) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SearchRequest_EnumSamle.Descriptor instead.
func (SearchRequest_EnumSamle) EnumDescriptor() ([]byte, []int) {
	return file_test_proto_rawDescGZIP(), []int{0, 0}
}

type SearchRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UInt32     uint32                  `protobuf:"varint,1,opt,name=u_int32,json=uInt32,proto3" json:"u_int32,omitempty"`
	UInt64     uint64                  `protobuf:"varint,2,opt,name=u_int64,json=uInt64,proto3" json:"u_int64,omitempty"`
	SInt32     int32                   `protobuf:"zigzag32,3,opt,name=s_int32,json=sInt32,proto3" json:"s_int32,omitempty"`
	SInt64     int64                   `protobuf:"zigzag64,4,opt,name=s_int64,json=sInt64,proto3" json:"s_int64,omitempty"`
	IInt32     int32                   `protobuf:"varint,5,opt,name=i_int32,json=iInt32,proto3" json:"i_int32,omitempty"`
	IInt64     int64                   `protobuf:"varint,6,opt,name=i_int64,json=iInt64,proto3" json:"i_int64,omitempty"`
	BBool      bool                    `protobuf:"varint,7,opt,name=b_bool,json=bBool,proto3" json:"b_bool,omitempty"`
	EEnumSamle SearchRequest_EnumSamle `protobuf:"varint,8,opt,name=e_enum_samle,json=eEnumSamle,proto3,enum=main.SearchRequest_EnumSamle" json:"e_enum_samle,omitempty"`
	FFixed64   uint64                  `protobuf:"fixed64,9,opt,name=f_fixed64,json=fFixed64,proto3" json:"f_fixed64,omitempty"`
	SSfixed64  int64                   `protobuf:"fixed64,10,opt,name=s_sfixed64,json=sSfixed64,proto3" json:"s_sfixed64,omitempty"`
	DDouble    float64                 `protobuf:"fixed64,11,opt,name=d_double,json=dDouble,proto3" json:"d_double,omitempty"`
	SString    string                  `protobuf:"bytes,12,opt,name=s_string,json=sString,proto3" json:"s_string,omitempty"`
	BBytes     []byte                  `protobuf:"bytes,13,opt,name=b_bytes,json=bBytes,proto3" json:"b_bytes,omitempty"`
	IInner     *Inner                  `protobuf:"bytes,14,opt,name=i_inner,json=iInner,proto3" json:"i_inner,omitempty"`
	FFixed32   uint32                  `protobuf:"fixed32,16,opt,name=f_fixed32,json=fFixed32,proto3" json:"f_fixed32,omitempty"`
	SSfixed32  int32                   `protobuf:"fixed32,17,opt,name=s_sfixed32,json=sSfixed32,proto3" json:"s_sfixed32,omitempty"`
	FFloat     float32                 `protobuf:"fixed32,18,opt,name=f_float,json=fFloat,proto3" json:"f_float,omitempty"`
	RUInt32    []uint32                `protobuf:"varint,101,rep,packed,name=r_u_int32,json=rUInt32,proto3" json:"r_u_int32,omitempty"`
	RUInt64    []uint64                `protobuf:"varint,102,rep,packed,name=r_u_int64,json=rUInt64,proto3" json:"r_u_int64,omitempty"`
	RSInt32    []int32                 `protobuf:"zigzag32,103,rep,packed,name=r_s_int32,json=rSInt32,proto3" json:"r_s_int32,omitempty"`
	RSInt64    []int64                 `protobuf:"zigzag64,104,rep,packed,name=r_s_int64,json=rSInt64,proto3" json:"r_s_int64,omitempty"`
	RIInt32    []int32                 `protobuf:"varint,105,rep,packed,name=r_i_int32,json=rIInt32,proto3" json:"r_i_int32,omitempty"`
	RIInt64    []int64                 `protobuf:"varint,106,rep,packed,name=r_i_int64,json=rIInt64,proto3" json:"r_i_int64,omitempty"`
	RBBool     []bool                  `protobuf:"varint,107,rep,packed,name=r_b_bool,json=rBBool,proto3" json:"r_b_bool,omitempty"`
}

func (x *SearchRequest) Reset() {
	*x = SearchRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_test_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchRequest) ProtoMessage() {}

func (x *SearchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_test_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchRequest.ProtoReflect.Descriptor instead.
func (*SearchRequest) Descriptor() ([]byte, []int) {
	return file_test_proto_rawDescGZIP(), []int{0}
}

func (x *SearchRequest) GetUInt32() uint32 {
	if x != nil {
		return x.UInt32
	}
	return 0
}

func (x *SearchRequest) GetUInt64() uint64 {
	if x != nil {
		return x.UInt64
	}
	return 0
}

func (x *SearchRequest) GetSInt32() int32 {
	if x != nil {
		return x.SInt32
	}
	return 0
}

func (x *SearchRequest) GetSInt64() int64 {
	if x != nil {
		return x.SInt64
	}
	return 0
}

func (x *SearchRequest) GetIInt32() int32 {
	if x != nil {
		return x.IInt32
	}
	return 0
}

func (x *SearchRequest) GetIInt64() int64 {
	if x != nil {
		return x.IInt64
	}
	return 0
}

func (x *SearchRequest) GetBBool() bool {
	if x != nil {
		return x.BBool
	}
	return false
}

func (x *SearchRequest) GetEEnumSamle() SearchRequest_EnumSamle {
	if x != nil {
		return x.EEnumSamle
	}
	return SearchRequest_Value1
}

func (x *SearchRequest) GetFFixed64() uint64 {
	if x != nil {
		return x.FFixed64
	}
	return 0
}

func (x *SearchRequest) GetSSfixed64() int64 {
	if x != nil {
		return x.SSfixed64
	}
	return 0
}

func (x *SearchRequest) GetDDouble() float64 {
	if x != nil {
		return x.DDouble
	}
	return 0
}

func (x *SearchRequest) GetSString() string {
	if x != nil {
		return x.SString
	}
	return ""
}

func (x *SearchRequest) GetBBytes() []byte {
	if x != nil {
		return x.BBytes
	}
	return nil
}

func (x *SearchRequest) GetIInner() *Inner {
	if x != nil {
		return x.IInner
	}
	return nil
}

func (x *SearchRequest) GetFFixed32() uint32 {
	if x != nil {
		return x.FFixed32
	}
	return 0
}

func (x *SearchRequest) GetSSfixed32() int32 {
	if x != nil {
		return x.SSfixed32
	}
	return 0
}

func (x *SearchRequest) GetFFloat() float32 {
	if x != nil {
		return x.FFloat
	}
	return 0
}

func (x *SearchRequest) GetRUInt32() []uint32 {
	if x != nil {
		return x.RUInt32
	}
	return nil
}

func (x *SearchRequest) GetRUInt64() []uint64 {
	if x != nil {
		return x.RUInt64
	}
	return nil
}

func (x *SearchRequest) GetRSInt32() []int32 {
	if x != nil {
		return x.RSInt32
	}
	return nil
}

func (x *SearchRequest) GetRSInt64() []int64 {
	if x != nil {
		return x.RSInt64
	}
	return nil
}

func (x *SearchRequest) GetRIInt32() []int32 {
	if x != nil {
		return x.RIInt32
	}
	return nil
}

func (x *SearchRequest) GetRIInt64() []int64 {
	if x != nil {
		return x.RIInt64
	}
	return nil
}

func (x *SearchRequest) GetRBBool() []bool {
	if x != nil {
		return x.RBBool
	}
	return nil
}

type Inner struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IInt32    int32  `protobuf:"varint,1,opt,name=i_int32,json=iInt32,proto3" json:"i_int32,omitempty"`
	SString   string `protobuf:"bytes,2,opt,name=s_string,json=sString,proto3" json:"s_string,omitempty"`
	SInt64    int64  `protobuf:"zigzag64,3,opt,name=s_int64,json=sInt64,proto3" json:"s_int64,omitempty"`
	FFixed64  uint64 `protobuf:"fixed64,4,opt,name=f_fixed64,json=fFixed64,proto3" json:"f_fixed64,omitempty"`
	SSfixed32 int32  `protobuf:"fixed32,5,opt,name=s_sfixed32,json=sSfixed32,proto3" json:"s_sfixed32,omitempty"`
}

func (x *Inner) Reset() {
	*x = Inner{}
	if protoimpl.UnsafeEnabled {
		mi := &file_test_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Inner) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Inner) ProtoMessage() {}

func (x *Inner) ProtoReflect() protoreflect.Message {
	mi := &file_test_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Inner.ProtoReflect.Descriptor instead.
func (*Inner) Descriptor() ([]byte, []int) {
	return file_test_proto_rawDescGZIP(), []int{1}
}

func (x *Inner) GetIInt32() int32 {
	if x != nil {
		return x.IInt32
	}
	return 0
}

func (x *Inner) GetSString() string {
	if x != nil {
		return x.SString
	}
	return ""
}

func (x *Inner) GetSInt64() int64 {
	if x != nil {
		return x.SInt64
	}
	return 0
}

func (x *Inner) GetFFixed64() uint64 {
	if x != nil {
		return x.FFixed64
	}
	return 0
}

func (x *Inner) GetSSfixed32() int32 {
	if x != nil {
		return x.SSfixed32
	}
	return 0
}

var File_test_proto protoreflect.FileDescriptor

var file_test_proto_rawDesc = []byte{
	0x0a, 0x0a, 0x74, 0x65, 0x73, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x04, 0x6d, 0x61,
	0x69, 0x6e, 0x22, 0xf6, 0x05, 0x0a, 0x0d, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x5f, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x75, 0x49, 0x6e, 0x74, 0x33, 0x32, 0x12, 0x17, 0x0a,
	0x07, 0x75, 0x5f, 0x69, 0x6e, 0x74, 0x36, 0x34, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06,
	0x75, 0x49, 0x6e, 0x74, 0x36, 0x34, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x5f, 0x69, 0x6e, 0x74, 0x33,
	0x32, 0x18, 0x03, 0x20, 0x01, 0x28, 0x11, 0x52, 0x06, 0x73, 0x49, 0x6e, 0x74, 0x33, 0x32, 0x12,
	0x17, 0x0a, 0x07, 0x73, 0x5f, 0x69, 0x6e, 0x74, 0x36, 0x34, 0x18, 0x04, 0x20, 0x01, 0x28, 0x12,
	0x52, 0x06, 0x73, 0x49, 0x6e, 0x74, 0x36, 0x34, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x5f, 0x69, 0x6e,
	0x74, 0x33, 0x32, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x69, 0x49, 0x6e, 0x74, 0x33,
	0x32, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x5f, 0x69, 0x6e, 0x74, 0x36, 0x34, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x06, 0x69, 0x49, 0x6e, 0x74, 0x36, 0x34, 0x12, 0x15, 0x0a, 0x06, 0x62, 0x5f,
	0x62, 0x6f, 0x6f, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x62, 0x42, 0x6f, 0x6f,
	0x6c, 0x12, 0x3f, 0x0a, 0x0c, 0x65, 0x5f, 0x65, 0x6e, 0x75, 0x6d, 0x5f, 0x73, 0x61, 0x6d, 0x6c,
	0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1d, 0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x53,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x45, 0x6e, 0x75,
	0x6d, 0x53, 0x61, 0x6d, 0x6c, 0x65, 0x52, 0x0a, 0x65, 0x45, 0x6e, 0x75, 0x6d, 0x53, 0x61, 0x6d,
	0x6c, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x5f, 0x66, 0x69, 0x78, 0x65, 0x64, 0x36, 0x34, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x06, 0x52, 0x08, 0x66, 0x46, 0x69, 0x78, 0x65, 0x64, 0x36, 0x34, 0x12,
	0x1d, 0x0a, 0x0a, 0x73, 0x5f, 0x73, 0x66, 0x69, 0x78, 0x65, 0x64, 0x36, 0x34, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x10, 0x52, 0x09, 0x73, 0x53, 0x66, 0x69, 0x78, 0x65, 0x64, 0x36, 0x34, 0x12, 0x19,
	0x0a, 0x08, 0x64, 0x5f, 0x64, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x07, 0x64, 0x44, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x5f, 0x73,
	0x74, 0x72, 0x69, 0x6e, 0x67, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x53, 0x74,
	0x72, 0x69, 0x6e, 0x67, 0x12, 0x17, 0x0a, 0x07, 0x62, 0x5f, 0x62, 0x79, 0x74, 0x65, 0x73, 0x18,
	0x0d, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x62, 0x42, 0x79, 0x74, 0x65, 0x73, 0x12, 0x24, 0x0a,
	0x07, 0x69, 0x5f, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b,
	0x2e, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x49, 0x6e, 0x6e, 0x65, 0x72, 0x52, 0x06, 0x69, 0x49, 0x6e,
	0x6e, 0x65, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x5f, 0x66, 0x69, 0x78, 0x65, 0x64, 0x33, 0x32,
	0x18, 0x10, 0x20, 0x01, 0x28, 0x07, 0x52, 0x08, 0x66, 0x46, 0x69, 0x78, 0x65, 0x64, 0x33, 0x32,
	0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x5f, 0x73, 0x66, 0x69, 0x78, 0x65, 0x64, 0x33, 0x32, 0x18, 0x11,
	0x20, 0x01, 0x28, 0x0f, 0x52, 0x09, 0x73, 0x53, 0x66, 0x69, 0x78, 0x65, 0x64, 0x33, 0x32, 0x12,
	0x17, 0x0a, 0x07, 0x66, 0x5f, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x18, 0x12, 0x20, 0x01, 0x28, 0x02,
	0x52, 0x06, 0x66, 0x46, 0x6c, 0x6f, 0x61, 0x74, 0x12, 0x1a, 0x0a, 0x09, 0x72, 0x5f, 0x75, 0x5f,
	0x69, 0x6e, 0x74, 0x33, 0x32, 0x18, 0x65, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x07, 0x72, 0x55, 0x49,
	0x6e, 0x74, 0x33, 0x32, 0x12, 0x1a, 0x0a, 0x09, 0x72, 0x5f, 0x75, 0x5f, 0x69, 0x6e, 0x74, 0x36,
	0x34, 0x18, 0x66, 0x20, 0x03, 0x28, 0x04, 0x52, 0x07, 0x72, 0x55, 0x49, 0x6e, 0x74, 0x36, 0x34,
	0x12, 0x1a, 0x0a, 0x09, 0x72, 0x5f, 0x73, 0x5f, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x18, 0x67, 0x20,
	0x03, 0x28, 0x11, 0x52, 0x07, 0x72, 0x53, 0x49, 0x6e, 0x74, 0x33, 0x32, 0x12, 0x1a, 0x0a, 0x09,
	0x72, 0x5f, 0x73, 0x5f, 0x69, 0x6e, 0x74, 0x36, 0x34, 0x18, 0x68, 0x20, 0x03, 0x28, 0x12, 0x52,
	0x07, 0x72, 0x53, 0x49, 0x6e, 0x74, 0x36, 0x34, 0x12, 0x1a, 0x0a, 0x09, 0x72, 0x5f, 0x69, 0x5f,
	0x69, 0x6e, 0x74, 0x33, 0x32, 0x18, 0x69, 0x20, 0x03, 0x28, 0x05, 0x52, 0x07, 0x72, 0x49, 0x49,
	0x6e, 0x74, 0x33, 0x32, 0x12, 0x1a, 0x0a, 0x09, 0x72, 0x5f, 0x69, 0x5f, 0x69, 0x6e, 0x74, 0x36,
	0x34, 0x18, 0x6a, 0x20, 0x03, 0x28, 0x03, 0x52, 0x07, 0x72, 0x49, 0x49, 0x6e, 0x74, 0x36, 0x34,
	0x12, 0x18, 0x0a, 0x08, 0x72, 0x5f, 0x62, 0x5f, 0x62, 0x6f, 0x6f, 0x6c, 0x18, 0x6b, 0x20, 0x03,
	0x28, 0x08, 0x52, 0x06, 0x72, 0x42, 0x42, 0x6f, 0x6f, 0x6c, 0x22, 0x2f, 0x0a, 0x09, 0x45, 0x6e,
	0x75, 0x6d, 0x53, 0x61, 0x6d, 0x6c, 0x65, 0x12, 0x0a, 0x0a, 0x06, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x31, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x32, 0x10, 0x01, 0x12,
	0x0a, 0x0a, 0x06, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x33, 0x10, 0x02, 0x22, 0x90, 0x01, 0x0a, 0x05,
	0x49, 0x6e, 0x6e, 0x65, 0x72, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x5f, 0x69, 0x6e, 0x74, 0x33, 0x32,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x69, 0x49, 0x6e, 0x74, 0x33, 0x32, 0x12, 0x19,
	0x0a, 0x08, 0x73, 0x5f, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x73, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x5f, 0x69,
	0x6e, 0x74, 0x36, 0x34, 0x18, 0x03, 0x20, 0x01, 0x28, 0x12, 0x52, 0x06, 0x73, 0x49, 0x6e, 0x74,
	0x36, 0x34, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x5f, 0x66, 0x69, 0x78, 0x65, 0x64, 0x36, 0x34, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x06, 0x52, 0x08, 0x66, 0x46, 0x69, 0x78, 0x65, 0x64, 0x36, 0x34, 0x12,
	0x1d, 0x0a, 0x0a, 0x73, 0x5f, 0x73, 0x66, 0x69, 0x78, 0x65, 0x64, 0x33, 0x32, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0f, 0x52, 0x09, 0x73, 0x53, 0x66, 0x69, 0x78, 0x65, 0x64, 0x33, 0x32, 0x42, 0x09,
	0x5a, 0x07, 0x2e, 0x2f, 0x3b, 0x6d, 0x61, 0x69, 0x6e, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_test_proto_rawDescOnce sync.Once
	file_test_proto_rawDescData = file_test_proto_rawDesc
)

func file_test_proto_rawDescGZIP() []byte {
	file_test_proto_rawDescOnce.Do(func() {
		file_test_proto_rawDescData = protoimpl.X.CompressGZIP(file_test_proto_rawDescData)
	})
	return file_test_proto_rawDescData
}

var file_test_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_test_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_test_proto_goTypes = []interface{}{
	(SearchRequest_EnumSamle)(0), // 0: main.SearchRequest.EnumSamle
	(*SearchRequest)(nil),        // 1: main.SearchRequest
	(*Inner)(nil),                // 2: main.Inner
}
var file_test_proto_depIdxs = []int32{
	0, // 0: main.SearchRequest.e_enum_samle:type_name -> main.SearchRequest.EnumSamle
	2, // 1: main.SearchRequest.i_inner:type_name -> main.Inner
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_test_proto_init() }
func file_test_proto_init() {
	if File_test_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_test_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_test_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Inner); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_test_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_test_proto_goTypes,
		DependencyIndexes: file_test_proto_depIdxs,
		EnumInfos:         file_test_proto_enumTypes,
		MessageInfos:      file_test_proto_msgTypes,
	}.Build()
	File_test_proto = out.File
	file_test_proto_rawDesc = nil
	file_test_proto_goTypes = nil
	file_test_proto_depIdxs = nil
}
